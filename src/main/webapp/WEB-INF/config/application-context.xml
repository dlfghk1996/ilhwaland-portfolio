<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.11.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<context:annotation-config/>	
	
	<!-- 트랜잭션 관리자 활성화
		@Transactional을 사용하기 위함 ( INSERT / UPDATE / DELETE 작업 )
	 -->
	<tx:annotation-driven/>
	
	<!-- 트랜잭션 관리자 등록 -->
   	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
   		 <property name="dataSource" ref="dataSource" />
   	</bean>
   	
	<!-- Connection Pool DataSource -->
   	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
      	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
      	<property name="url" value="jdbc:oracle:thin:@192.168.35.66:1521:xe" />
      	<property name="username" value="C##ILHWALAND" />
      	<property name="password" value="0819" />
  	</bean>

   	<!-- JPA 설정 ( 엔티티 매니저 팩토리 등록 ) -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
   		<property name="dataSource" ref="dataSource"/> 
   		
   		<!-- @Entity 탐색 범위 -->
   		<property name="packagesToScan" value="com.kim.ilhwaland.dto" />
   		
   		<!-- 하이버네이트 구현체 사용 -->
	   	<property name="jpaVendorAdapter">
	   		<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
	   	</property>
	   	
	   	<!-- 하이버네이트 상세 설정 -->
       	<property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop> <!-- 방언 -->
                <prop key="hibernate.show_sql">true</prop>                          <!-- SQL 보기 -->
                <prop key="hibernate.format_sql">true</prop>                        <!-- SQL 정렬해서 보기 -->
                <prop key="hibernate.use_sql_comments">true</prop>                  <!-- SQL 주석 보기 -->
                <prop key="hibernate.id.new_generator_mappings">true</prop>         <!-- JPA 표준에 맞게 새로운 키 생성 전략을 사용-->
            </props>
       	</property>
   	</bean>
   	
   	<!-- JPA 예외를 스프링 예외로 변환 -->
   	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

   	<!-- JPA repository Interface Scanning -->
   	<jpa:repositories base-package="com.kim.ilhwaland.repository"/>
   	
  	<context:component-scan base-package="com.kim.ilhwaland.service, com.kim.ilhwaland.repository">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
	</context:component-scan>
</beans>
